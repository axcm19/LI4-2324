@using System;
@using System.Globalization;
@using LeiloesOnline.Business;
@using LeiloesOnline.Business.Objects;
@inject NavigationManager NavigationManager

@page "/proposta"

<PageTitle>Proposta de Leilão</PageTitle>

<center><h1>Proposta de Leilão</h1></center>


<p>
    <b>Categoria: </b>
    <button @onclick=mudaCategoriaMisto type="button" class="btn btn-secondary">Misto</button>
    <button @onclick=mudaCategoriaLivros type="button" class="btn btn-secondary">Livros</button>
    <button @onclick=mudaCategoriaQuadros type="button" class="btn btn-secondary">Quadros</button>
    <button @onclick=mudaCategoriaJoias type="button" class="btn btn-secondary">Joias</button>
</p>

<p>
    <form action="/action_page.php">
        <label for="fname"><b>Nome do Leilão:</b></label>
        <input type="text" id="fname" name="fname" @bind="nome_leilao">
    </form>
</p>


<style>
    table, th, td {
        border: 1px solid black;
    }
</style>

<table style="width:40%">
    <tr>
        <th>Lista de artigos:</th>
    </tr>
    @foreach (var item in artigosCurrent)
    {
        <tr>
            <td>ID: @item.Value.getIdArtigo() | TIPO: @item.Value.GetType().Name | NOME: @item.Value.getNome() | DESCRIÇÃO: @item.Value.getDescricao() </td>
        </tr>
    }
</table>

<p>
    <label for="fname"> Indicar ID do artigo: </label>
    <input type="text" id="fname" name="fname" @bind="id_artigo_escolhido">
    <a @onclick=@adicionaArtigoAoLote class="btn btn-primary btn-sm">Adicionar artigo ao lote</a>
    <a @onclick=@removeArtigoDoLote class="btn btn-primary btn-sm">Remover artigo do lote</a>
</p>

<p>       </p>


<p>
    <form action="/action_page.php">
        <label for="fname"><b>Preço Base:</b></label>
        <input type="text" id="fname" name="fname" @bind="preco_base">
    </form> 
</p>

<p>
    <form action="/action_page.php">
        <label for="fname"><b>Valor de diferença:</b></label>
        <input type="text" id="fname" name="fname" @bind="valor_diferenca">
    </form> 
</p>

<p>
    <b>Duração:</b> 
    <label for="fname">Data de Início (YYYY-MM-DD HH:MI:SS): </label>
    <input type="text" id="fname" name="fname" @bind="data_inicio">
    <label for="fname">Data de Término (YYYY-MM-DD HH:MI:SS):</label>
    <input type="text" id="fname" name="fname" @bind="data_fim">
</p>

<center> <a class="botao-esq btn btn-primary" href="/HomepageLogged">Voltar</a> </center>
<center><button @onclick=@proporLeilao>Propor</button></center>


<script>
    function selecionarJoias() {
        // Obtenha o elemento select
        var selectElement = document.getElementById("filtro");

        // Defina a opção "Joias" como selecionada
        for (var i = 0; i < selectElement.options.length; i++) {
            if (selectElement.options[i].value === "Joias") {
                selectElement.options[i].selected = true;
            }
        }
    }
</script>


@code {

    private string categoria;
    private string nome_leilao;
    private float preco_base;
    private float valor_diferenca;
    private string data_inicio;
    private string data_fim;

    private Dictionary<int, Artigo> artigosParaLeiloar = new Dictionary<int, Artigo>();

    private Dictionary<int, Artigo> artigosCurrent = CurrentUser.getCurrentUser().meusArtigos;
    int id_artigo_escolhido = 0;

    void mudaCategoriaMisto()
    {
        categoria = "Misto";
    }
    void mudaCategoriaLivros()
    {
        categoria = "Livros";
    }
    void mudaCategoriaQuadros()
    {
        categoria = "Quadros";
    }
    void mudaCategoriaJoias()
    {
        categoria = "Joias";
    }



    void adicionaArtigoAoLote()
    {

        // se o artigo ainda não existir no dicionario 
        if (!artigosParaLeiloar.ContainsKey(id_artigo_escolhido))
        {
            I_LeiloesOnlineFacade if_leiloes = new LeiloesOnlineFacade();
            Artigo a = if_leiloes.getArtigo(id_artigo_escolhido);

            artigosParaLeiloar.Add(id_artigo_escolhido, a);
            Console.WriteLine("Adicionado artigo para leiloar");
            Console.WriteLine(listaArtigosParaLeiloar(artigosParaLeiloar));

        }
        else
        {
            Console.WriteLine("Erro ao adicionar artigo para leiloar");
            Console.WriteLine(listaArtigosParaLeiloar(artigosParaLeiloar));
        }
    }

    void removeArtigoDoLote()
    {
        // se o artigo existe no dicionario pode ser removido
        if (artigosParaLeiloar.ContainsKey(id_artigo_escolhido))
        {
            artigosParaLeiloar.Remove(id_artigo_escolhido);
            Console.WriteLine("Removido artigo para leiloar");
            Console.WriteLine(listaArtigosParaLeiloar(artigosParaLeiloar));
        }
        else
        {
            Console.WriteLine("Erro ao remover artigo para leiloar");
            Console.WriteLine(listaArtigosParaLeiloar(artigosParaLeiloar));
        }
    }


    void proporLeilao()
    {
        I_LeiloesOnlineFacade if_leiloes = new LeiloesOnlineFacade();
        Dictionary<string, Licitacao> licitacoes = new Dictionary<string, Licitacao>();
        LoteArtigos loteartigos = new LoteArtigos();

        DateTime data_i = new DateTime();
        DateTime data_f = new DateTime();

        // se o formato inserido de data for válido prosegue com a proposta
        DateTime dateValue;
        CultureInfo pt = new CultureInfo("pt-PT");

        if (DateTime.TryParseExact(data_inicio, "yyyy-MM-dd HH:mm:ss", pt, DateTimeStyles.None, out dateValue) == true &&
            DateTime.TryParseExact(data_fim, "yyyy-MM-dd HH:mm:ss", pt, DateTimeStyles.None, out dateValue) == true)
        {
            //converter datas de string para Datetime
            data_i = DateTime.Parse(data_inicio);
            data_f = DateTime.Parse(data_fim);
        }
        else
        {
            Console.WriteLine("O formato inserido numa das datas não é válido!");
            return;
        }

        // adicionar o lote de artigos
        foreach(Artigo a in artigosParaLeiloar.Values){
            loteartigos.adicionaArtigoAoLote(a);
            Console.WriteLine("Adicionado " +a.getNome()+ " ao lote de artigos");
        }

        // o valor de aprovado deverá ser false pra depois ser mudado para true pelo administrador
        if (if_leiloes.proporLeilao(categoria, nome_leilao, data_i, data_f, preco_base, valor_diferenca, 0, false, CurrentUser.getCurrentUser().email_participante, licitacoes, loteartigos))
        {
            Console.WriteLine("Leilão proposto com sucesso");
        }
        else
        {
            Console.WriteLine("Erro a propor leilão");
        }
    }

    public string listaArtigosParaLeiloar(Dictionary<int, Artigo> artigosParaLeiloar_copy)
    {
        string res = "";
        foreach (var item in artigosParaLeiloar_copy)
        {
            res += "ID:" + item.Value.getIdArtigo() + "| TIPO:" + item.Value.GetType().Name + "| NOME:" + item.Value.getNome() + "| DESCRIÇÃO:" + item.Value.getDescricao();
        }
        return res;
    }

}